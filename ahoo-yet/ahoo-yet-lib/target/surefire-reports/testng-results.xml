<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="8" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-12T23:04:04 EEST" name="SuiteJavaCourse" finished-at="2024-06-12T23:04:04 EEST" duration-ms="204">
    <groups>
      <group name="unit">
        <method signature="DeviceIdentificationTest.testNegativeID()[pri:0, instance:student.examples.DeviceIdentificationTest@2f7298b]" name="testNegativeID" class="student.examples.DeviceIdentificationTest"/>
        <method signature="HasBatteryTest.testOverDischarge()[pri:0, instance:student.examples.HasBatteryTest@7714e963]" name="testOverDischarge" class="student.examples.HasBatteryTest"/>
        <method signature="HasBatteryTest.testOvercharge()[pri:0, instance:student.examples.HasBatteryTest@7714e963]" name="testOvercharge" class="student.examples.HasBatteryTest"/>
        <method signature="HasPowerStatesTest.testIsOn()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" name="testIsOn" class="student.examples.HasPowerStatesTest"/>
        <method signature="HasPowerStatesTest.testSwitchOn()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" name="testSwitchOn" class="student.examples.HasPowerStatesTest"/>
        <method signature="HasPowerStatesTest.testSwitchoff()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" name="testSwitchoff" class="student.examples.HasPowerStatesTest"/>
      </group> <!-- unit -->
    </groups>
    <test started-at="2024-06-12T23:04:04 EEST" name="pizdec" finished-at="2024-06-12T23:04:04 EEST" duration-ms="204">
      <class name="student.examples.DeviceIdentificationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:student.examples.DeviceIdentificationTest@2f7298b]" started-at="2024-06-12T23:04:04 EEST" name="setup" finished-at="2024-06-12T23:04:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testNegativeID()[pri:0, instance:student.examples.DeviceIdentificationTest@2f7298b]" started-at="2024-06-12T23:04:04 EEST" name="testNegativeID" finished-at="2024-06-12T23:04:04 EEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeID -->
      </class> <!-- student.examples.DeviceIdentificationTest -->
      <class name="student.examples.HasPowerStatesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" started-at="2024-06-12T23:04:04 EEST" name="setUp" finished-at="2024-06-12T23:04:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsOn()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" started-at="2024-06-12T23:04:04 EEST" name="testIsOn" finished-at="2024-06-12T23:04:04 EEST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOn -->
        <test-method signature="testSwitchOn()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" started-at="2024-06-12T23:04:04 EEST" name="testSwitchOn" finished-at="2024-06-12T23:04:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchOn -->
        <test-method signature="testSwitchoff()[pri:0, instance:student.examples.HasPowerStatesTest@20ce78ec]" started-at="2024-06-12T23:04:04 EEST" name="testSwitchoff" finished-at="2024-06-12T23:04:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchoff -->
      </class> <!-- student.examples.HasPowerStatesTest -->
      <class name="student.examples.HasBatteryTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:student.examples.HasBatteryTest@7714e963]" started-at="2024-06-12T23:04:04 EEST" name="setUp" finished-at="2024-06-12T23:04:04 EEST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOverDischarge()[pri:0, instance:student.examples.HasBatteryTest@7714e963]" started-at="2024-06-12T23:04:04 EEST" name="testOverDischarge" finished-at="2024-06-12T23:04:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverDischarge -->
        <test-method signature="testOvercharge()[pri:0, instance:student.examples.HasBatteryTest@7714e963]" started-at="2024-06-12T23:04:04 EEST" name="testOvercharge" finished-at="2024-06-12T23:04:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOvercharge -->
      </class> <!-- student.examples.HasBatteryTest -->
      <class name="student.examples.IterativeChargeTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="setUp" finished-at="2024-06-12T23:04:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testChargeXML([Ljava.lang.Object;)[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="testChargeXML" data-provider="dataFromXML" finished-at="2024-06-12T23:04:04 EEST" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@ed7f8b4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "o"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "o"
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:662)
at java.base/java.lang.Integer.parseInt(Integer.java:778)
at student.examples.IterativeChargeTest.testChargeXML(IterativeChargeTest.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChargeXML -->
        <test-method signature="testChargeXML([Ljava.lang.Object;)[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="testChargeXML" data-provider="dataFromXML" finished-at="2024-06-12T23:04:04 EEST" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a675056]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [5]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at student.examples.IterativeChargeTest.testChargeXML(IterativeChargeTest.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChargeXML -->
        <test-method signature="testChargeXML([Ljava.lang.Object;)[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="testChargeXML" data-provider="dataFromXML" finished-at="2024-06-12T23:04:04 EEST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@17a7f733]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [10]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at student.examples.IterativeChargeTest.testChargeXML(IterativeChargeTest.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChargeXML -->
        <test-method signature="testChargeXML([Ljava.lang.Object;)[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="testChargeXML" data-provider="dataFromXML" finished-at="2024-06-12T23:04:04 EEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@11fc564b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChargeXML -->
        <test-method signature="testChargeXML([Ljava.lang.Object;)[pri:0, instance:student.examples.IterativeChargeTest@393671df]" started-at="2024-06-12T23:04:04 EEST" name="testChargeXML" data-provider="dataFromXML" finished-at="2024-06-12T23:04:04 EEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6236eb5f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChargeXML -->
      </class> <!-- student.examples.IterativeChargeTest -->
    </test> <!-- pizdec -->
  </suite> <!-- SuiteJavaCourse -->
</testng-results>
